/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode rev1 = l1;
        ListNode rev2 = l2;
        ListNode head = new ListNode(0);
        ListNode curr = head;
        int carry = 0;
        
        while(rev1 != null || rev2 != null || carry != 0){
            if(rev1 != null){
                carry += rev1.val;
                rev1 = rev1.next;
            }
            if(rev2 != null){
                carry += rev2.val;
                rev2 = rev2.next;
            }
            
            curr.next = new ListNode(carry%10);
            curr = curr.next;
            carry = carry/10;
        }
        
        return head.next;
    }
    
    ListNode reverseList(ListNode head){
        ListNode prev = null;
        ListNode curr = head;
        while(curr != null){
            ListNode currNext = curr.next;
            curr.next = prev;
            prev = curr;
            curr = currNext;
        }
        return prev;
    }
    
}
