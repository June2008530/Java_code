class Solution {
    public String fractionToDecimal(int numerator, int denominator) {
        if(numerator == 0){
            return "0";
        }
        
        StringBuilder sb = new StringBuilder();
        if((numerator > 0 && denominator < 0) || (numerator < 0 && denominator > 0)){
            sb.append("-");
        }
        
        long num = Math.abs((long)numerator);
        long den = Math.abs((long)denominator);
        
        sb.append(num/den);
        num = num % den;
        
        if(num == 0){
            return sb.toString();
        }
        
        //res is not int
        sb.append(".");
        HashMap<Long, Integer> hp = new HashMap<>();
        hp.put(num, sb.length());
        
        while(num != 0){
            num = num * 10;
            sb.append(num/den);
            num = num % den;
            if(hp.containsKey(num)){
                int index = hp.get(num);
                sb.insert(index, "(");
                sb.append(")");
                break;
            }
            else{
                hp.put(num, sb.length());
            }
        }
        
        return sb.toString();
    }
}
