class Solution {
    public List<Integer> topKFrequent(int[] nums, int k) {
        //leetcodde 347
        //time: O(n), space: O(n)
        List<Integer> res = new ArrayList<>();
        if(nums == null || nums.length == 0) return res;
        
        HashMap<Integer, Integer> map = new HashMap<>();
        int maxF = 1;
        
        for(int i:nums){
            map.put(i, map.getOrDefault(i,0) + 1);
        }
        
        //bucket sort, bucket is an array with each element is an Arraylist
        List<Integer>[] bucket = new List[nums.length+1];
        for(int num : map.keySet()){
            int freq = map.get(num);
            if(bucket[freq] == null){
                bucket[freq] = new ArrayList<>();
            }
            
            bucket[freq].add(num);
        }
        
        for(int i = bucket.length-1; i >= 0 && res.size() < k; i--){
            if(bucket[i] != null){
                res.addAll(bucket[i]);
            }
        }
        
        return res;
    }
}
