class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        //leetcode 159, time: O(n), space: O(1)
        if(s == null || s.length() == 0) return 0;
        
        int res = 0;
        int cur = 0;
        Map<Character, Integer> map = new HashMap<>();
        
        for(int i = 0; i < s.length(); i++){
            if(map.size() < 2 || map.containsKey(s.charAt(i))){
                cur++;
                map.put(s.charAt(i), i);
            }
            else{
                for(Character c : map.keySet()){
                    if(c != s.charAt(i-1)){
                        int ind = map.get(c);
                        cur = i - ind;
                    }
                }
                
                map.clear();
                map.put(s.charAt(i-1), i-1);
                map.put(s.charAt(i), i);
            }
            
            res = Math.max(res, cur);
        }
        
        return res;
    }
}
