class Solution {
    public int findPairs(int[] nums, int k) {
        if(nums == null || nums.length == 0 || k < 0){
            return 0;
        }
        
        //time: O(n), space: O(n)
        int res = 0;
        HashMap<Integer, Integer> hm = new HashMap<>();
        
        for(int i:nums){
            if(!hm.containsKey(i)){
                hm.put(i, 1);
            }
            else{
                hm.put(i, hm.get(i)+1);
            }
        }
        
        for(int i:hm.keySet()){
            if(k != 0){
                if(hm.containsKey(i+k)){
                    res++; 
                } 
            }
            else{
                if(hm.get(i) >= 2){
                    res++; 
                } 
            }
        }
        
        return res;
        
        //time: O(n^2), space: O(1)
        /*
        Arrays.sort(nums);
        int res = 0;
        
        for(int i = 0; i < nums.length; i++){
            if(i > 0 && nums[i] == nums[i-1]){
                continue;
            }
            for(int j = i+1; j < nums.length; j++){
                if(nums[j] - nums[i] == k){
                    res++;
                    break;
                }
            }
        }
        
        return res;
        */
    }
}
