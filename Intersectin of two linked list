/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA == null || headB == null){
            return null;
        }
        
        int lenA = listlen(headA);
        int lenB = listlen(headB);
        
        if(lenA > lenB){
            while(lenA != lenB){
                headA = headA.next;
                lenA--;
            }
        }
        else{
            while(lenB != lenA){
                headB = headB.next;
                lenB--;
            }
        }
        
        while(headA != headB){
            headA = headA.next;
            headB = headB.next;
        }
        
        return headA;
    }
    
    private int listlen(ListNode node){
        int len = 1;
        while(node != null){
            node = node.next;
            len++;
        }
        return len;
    }
}
