/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder == null || inorder == null || preorder.length == 0 || preorder.length != inorder.length){
            return null;
        }
        
        return helper(preorder, inorder, 0, 0, inorder.length - 1);
    }
    
    public TreeNode helper(int[] preorder, int[] inorder, int prestart, int instart, int inend){
        if(prestart >= preorder.length || instart > inend){
            return null;
        }
        TreeNode node = new TreeNode(preorder[prestart]);
        
        //find root index in inorder
        int i = instart;
        while(i <= inend){
            if(inorder[i] == preorder[prestart]){
                break;
            }
            i++;
        }
        
        node.left = helper(preorder, inorder, prestart + 1, instart, i-1);
        node.right = helper(preorder, inorder, prestart + (i-instart+1), i+1, inend); //pstart+leftSize
    
        return node;
    }
}
