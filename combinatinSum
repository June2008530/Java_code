class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        Arrays.sort(candidates);
        
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        List<Integer> comSum = new ArrayList<Integer>();
        
        helper(ans,comSum, candidates,target,0);
        
        return ans;
    }
    
    void helper(List<List<Integer>> ans, List<Integer> comSum, int[] candidates, int target, int ind){
        //base case
        if(target == 0){
            ans.add(new ArrayList<Integer>(comSum));
            return;
        }
        else{
            for(int i = ind; i < candidates.length; i++){
                if(candidates[i] > target){
                    break;
                }
                
                comSum.add(candidates[i]);
                helper(ans, comSum, candidates, target-candidates[i],i);
                comSum.remove(comSum.size() - 1);
            }
        }
    }
}
