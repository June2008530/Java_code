class Solution {
    public int fourSumCount(int[] A, int[] B, int[] C, int[] D) {
        //leetcode 454, time: O(n^2), space: O(n^2)
        HashMap<Integer, Integer> map = new HashMap<>();
        int res = 0;
        
        for(int i = 0; i < A.length; i++){
            for(int j = 0; j < B.length; j++){
                int sum = A[i] + B[j];
                map.put(sum, map.getOrDefault(sum, 0) + 1);
            }
        }
        
        for(int i = 0; i < C.length; i++){
            for(int j = 0; j < D.length; j++){
                if(map.containsKey(0 - C[i] - D[j])){
                    res += map.get(0 - C[i] - D[j]);
                };
            }
        }

        return res;
    }
}
